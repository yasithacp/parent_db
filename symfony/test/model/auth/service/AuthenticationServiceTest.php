<?php



/**
 * Test class for AuthenticationService.
 * Generated by PHPUnit on 2011-09-13 at 02:25:47.
 */
class AuthenticationServiceTest extends PHPUnit_Framework_TestCase {

    /**
     * @var AuthenticationService
     */
    protected $authService;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->authService = new AuthenticationService;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * Tests the getAuthenticationDao() method
     */
    public function testGetAuthenticationDao() {
        $this->assertTrue($this->authService->getAuthenticationDao() instanceof AuthenticationDao);

        $dao = new AuthenticationDao();
        $this->authService->setAuthenticationDao($dao);
        $this->assertEquals($dao, $this->authService->getAuthenticationDao());
    }

    /**
     * Tests the setAuthenticationDao() method
     */
    public function testSetAuthenticationDao() {
        $dao = new AuthenticationDao();
        $this->authService->setAuthenticationDao($dao);
        $this->assertEquals($dao, $this->authService->getAuthenticationDao());
    }

    public function testGetCookieManager() {
        $this->assertTrue($this->authService->getCookieManager() instanceof CookieManager);

        $cookieManager = new CookieManager();
        $this->authService->setCookieManager($cookieManager);
        $this->assertEquals($cookieManager, $this->authService->getCookieManager());
    }

    /**
     * Tests the setCookieManager() method
     */
    public function testSetCookieManager() {
        $cookieManager = new CookieManager();
        $this->authService->setCookieManager($cookieManager);
        $this->assertEquals($cookieManager, $this->authService->getCookieManager());
    }

    /**
     * Tests the setCredentials() method
     */
    public function testSetCredentials() {
        $user = new Users();
        $user->setUserName('test_user');

        $mockDao = $this->getMock('AuthenticationDao', array('getCredentials'));
        $mockDao->expects($this->once())
                ->method('getCredentials')
                ->with('test_user', md5('test_password'))
                ->will($this->returnValue($user));

        $mockCookieManager = $this->getMock('CookieManager', array('setCookie'));
        $mockCookieManager->expects($this->once())
                ->method('setCookie')
                ->with('Loggedin', 'True', 0, '/');

        $this->authService->setAuthenticationDao($mockDao);
        $this->authService->setCookieManager($mockCookieManager);

        $result = $this->authService->setCredentials('test_user', 'test_password', array());
        $this->assertTrue($result);
    }

}

?>
